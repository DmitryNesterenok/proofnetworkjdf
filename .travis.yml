sudo: required
dist: trusty
language: cpp
services:
  - docker

cache:
  directories:
    - $HOME/builder_ccache
    - $HOME/full_build
    - $HOME/proof-bin

env:
  global:
    - TARGET_NAME=`echo "$TRAVIS_REPO_SLUG" | sed -r 's|(.*/)?(.+)|\2|'`
    - PATH=$HOME/.local/bin:$PATH
    - secure: "TA0LohspMG0qtIWEIXFIfl2x5t1msfATUdh2162qfGKM5nD/QsxflxBihJHOBxpGAZ65FumQHE/V/EhLpnsHqzSYtU2X7Bffg+2jzgHoDbI3TRfrncPVBe1OxI15wPLsSHOdr3aMhrbmVV0TKU042r/t45p8VSF8K5x7FxMWbClFr1nF5jCT3huc98+hT1AcIMdk2VQzf1eyU8JPpQm/xkclgwiT5CFzSZGfahbydHwbXVv2BqaaPQdE+94XaZ45o1htS98sd2I3GroWG11zQaPxQYWw+fchJiORQEcoeTfO85XXTDKA3qUzAnlLIoa7XXmRmzTWMSk1332st3qBgklZ2YI57ILoobM1m8UxS7y3HehrH2ZvqHwpsJJ1KUU8yLaJ0z0fi1Pu9IQqJv3p30ZyteLvr7jd2AdeexHgHAJhh9bV0diGpO0GiVHFY5N9em6z9K3vco/tUGFYap2MYjzKySpoDQAv0jL5bqAItlDTUSIQdf4o3yo2JSaZ1vArPw8Wd0EzXj3Nn/BC96fSerXo6NE6fLAx6yr5IVyQdcuLKQB+JXtlnF8+3jW3j4APO8tRaq+e4T0ivSwzPy6QwFjy9ytnA3FdoUUPFvuuQn7d0lq55DEHgIv00QZ5nz0ZlPYZJageVxgP2KDgBwAzuHoq66zsYhh73dl1f8tBu7Q="
    - secure: "aCX+k3v+pLLZ3dT0TBfLcY4rBnPqT9b8bvu61nVruPPOvcGsUgLaigxKKSmiwCVl6jrR2KSELVfBtnr6wvrgzYzMVkVpvDyp5lnUe1iTkABvRKR0W6Y004svAGHR5J2Eqjc5AbxJXFasgdu7a8SAMsbdl7fL0THdcLoL435LMMYt3pMg/m+0Q28Uj+KB+lK1daAtkzopY5c4+Ct6RU1tEtoHD2HiNUYPnToMF0+WJSwSMzCKsDY027iSbE5WORzywKcADjBJxWej5tunShMtHWdNxB8fyKHuDCYstkybm40/Jr7aLWPVvtCMW4kNcI8j/Kj2KBiWo0wdtn/b5JqaUaEZjz5xAGP6TCE9cOjnbTmz+/SVXEHRgMdQgM/F6lhof2ExJVkgXJV4oMVtbRnbPfZ7ooNJCppdbZMlm4w1Nv0bG6OjJmUsfWRM0/h2+t6sR7dzUmFZpn69T2oI14n2GOWcJb9PugI4BQ0gUZsTr+ibiggg1d2cvvhSEwgGOLkHHS4oC/Ub9dJFQ6uSgTVHPFPzu7K2yicw13+hIfLos8nz/vkZvDDOX6YIcXlQ1/72F+RDnC9R3YO89lhk1KOxZ9ho1zuf1+MdGvtEm12b0S0L64dLgqmSCip6NNL0BC+OfhlhEHbysgGJLe4bND9ZYABf5cTuQPtmFN5U4QrQ1p0="
    - secure: "dQl4O4vNCCesS1CRh+BPnvtAHnX2/IWhYsuEGs4aG5bGZJlNw+8+TNmJ8s5bpisMCsu/E768whLTlBkUI6ll5/EZk/5ZQAoEdOnhlTRMyxhY266h9tApezZbTYyZGrPepq4M5dy5xJjRtyAyisczlgc3Yi+0qtBGEILMnOnHJZX2kpdlq5YbXOQmrDzXnfRQKhqs1fP1XdHo0Fvn/q9LWcOWMvWr/g6gjbw5KlEF2Igi22uU6CIbptHwzTPNPJRLErU2pspZL68QUs4Db+LUxVNo6yJWRO0sTCZ8ZbPqPVtBIb3zElMmkjyNgTVV2FAjb3LAcpPzdALZVKgyss1IVUuRn8tXgXQjWdxWd17ufqKiJ1i/aJeFAJvtlXcnR6yQNodc+ajHGc4KfOhLEYJQZSC2NbCKYx0NBZncTes1Ibdp4zkx79VT0tsxekTwjYsx+LDwYWHiU6S54chEzfoFN9HcySGc4JrFt5jUMyvE6TuYtZq4CsTMHSqeoglvcOla2zzg4FwEeamtsw0YiWY+JQOm965L1OdOwngBnou5JIwSo/XOpFgwUAyrl5MztHUn5A6ngWJX7wW2Z812gSg2xXNOv58zl7Yt8yW2CN2yNqCVly0Ow4CaIl1umfDQc4KkXvzzR9giY5Mf27oMRXfG9gqW8EVNST82QCuFhD5qH/8="
    - secure: "BCDtXaVsDTvLEhenCWT1hlFcmiNXX4ZDU2HAV1t06fZRHYGOHFsl1s/hOQcSp1LBe3VdXVluVGhu4INe5kQnNzVGg8V00LlSlTmFGqvYPTVRZAJlVuarZlrqgpf7O3u4OzBHoTKhOcS9eLKuQUiBjo3AO+2yelmaNt0pb2Fnubc1C6A5rGKlKCTe02/2NlnPff1y5xH1AHdWAWaoIsrzqN0j8Hvd+n7yIsDbLHatjMfgOoN8N+UKDaheAMAAC3vFT3Y2Y/OoL2Ct8ZO2j9BquN1FSZa5fc/YoGCnERNFJebN1fjjNvI9x9zwxjzZ2rL8A+ZcAT04WlYfOgHL2/5MqmcTzImQGftE6euqyEUE+GWqFca0TabADwS3PpvMrg2ZZFda/SPjE5Vvr2obsADCE26VuYfCNu260cxyo7aBQYduYWZ4s4oeIFUOLvCCzlRmY7dPF93pEuYE7K6Kb0XhzJo5Az9vb8cmdQTNz4+guCI2vFNxqczGaf43Iif7aWyCB7TmwfuhNMYCY+826vTdQxpjcIpl+0P7izqZLev74M9/t50hWzJG1A5VUXSSQoYX/zraJuNaBquJGilpvpCkldVITqOPHFMUSMUxb4uwCQQI49LlluzTF2OycZBzNvMHM3CuaHjuXV3TsecuSJxTYpHUDc+usEXMtYjQnhOjV0Y="

before_install: export -f travis_fold && export -f travis_time_start && export -f travis_time_finish && export -f travis_nanoseconds
script: echo "Nothing to do"

jobs:
  include:
    - &proof-boot
      stage: Proof boot
      name: Linux proofboot downloading
      if: type != pull_request AND tag IS blank AND branch != master
      before_script: pip install --user awscli
      script:
        - aws s3 cp s3://proof.travis.builds/$TRAVIS_BRANCH/raw-bin/proofboot-bin-debian9.tar.gz $HOME/proof-bin.tar.gz ||
          aws s3 cp s3://proof.travis.builds/develop/raw-bin/proofboot-bin-debian9.tar.gz $HOME/proof-bin.tar.gz || travis_terminate 1
        - cd $HOME && sudo rm -rf proof-bin && tar -xzf proof-bin.tar.gz
    - <<: *proof-boot
      stage: Proof boot
      name: Linux proofboot downloading for API compatibility check
      if: type != pull_request AND tag IS blank AND branch != master
      env: DUMMY=abi
      before_script: pip install --user awscli
      script:
        - aws s3 cp s3://proof.travis.builds/$TRAVIS_BRANCH/raw-bin/proofboot-bin-debian9.tar.gz $HOME/proof-bin.tar.gz ||
          aws s3 cp s3://proof.travis.builds/develop/raw-bin/proofboot-bin-debian9.tar.gz $HOME/proof-bin.tar.gz || travis_terminate 1
        - cd $HOME && sudo rm -rf proof-bin && tar -xzf proof-bin.tar.gz
    - <<: *proof-boot
      name: Android proofboot downloading
      if: type != pull_request AND tag IS blank AND branch != master
      language: android
      android:
        components:
          - build-tools-25.0.2
      env: DUMMY=android
      before_script: pip install --user awscli
      script:
        - aws s3 cp s3://proof.travis.builds/$TRAVIS_BRANCH/raw-bin/proofboot-bin-android.tar.gz $HOME/proof-bin.tar.gz ||
          aws s3 cp s3://proof.travis.builds/develop/raw-bin/proofboot-bin-android.tar.gz $HOME/proof-bin.tar.gz || travis_terminate 1
        - cd $HOME && sudo rm -rf proof-bin && tar -xzf proof-bin.tar.gz

    - &pre-compile
      stage: Proof dependencies
      name: Linux proof modules downloading
      if: type != pull_request AND tag IS blank AND branch != master
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/pre-compile/raw-bin_download.sh debian9
    - <<: *pre-compile
      name: Linux proof modules downloading for API compatibility check
      if: type != pull_request AND tag IS blank AND branch != master
      env: DUMMY=abi
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/pre-compile/raw-bin_download.sh debian9
    - <<: *pre-compile
      name: Android proof modules downloading
      language: android
      android:
        components:
          - build-tools-25.0.2
      env: DUMMY=android
      if: type != pull_request AND tag IS blank AND branch != master
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/pre-compile/raw-bin_download.sh android

    - &compile
      stage: compilation and static checks
      name: Compilation (Debian9/clang/ccache)
      if: tag IS blank AND branch != master
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/compile/linux_compile.sh
    - <<: *compile
      name: Code style check with clang-format
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/compile/clang-format_check.sh
    - <<: *compile
      name: Static code analysis with clazy
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/compile/clazy_check.sh
    - <<: *compile
      name: API compatibility check
      env: DUMMY=abi
      if: tag IS blank AND branch != master
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/compile/abi_check.sh
    - <<: *compile
      name: Compilation (Android27/gcc/ccache)
      language: android
      android:
        components:
          - tools
          - platform-tools
          - tools
          - build-tools-27.0.3
          - android-27
      env: DUMMY=android
      if: tag IS blank AND branch != master
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/compile/android_compile.sh

    - &unit-tests
      stage: unit tests
      name: tests/ProofNetworkJdf
      if: tag IS blank AND branch != master
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/unit-tests/run_tests.sh network-jdf

    - &post-compile
      stage: Post compilation
      name: Raw linux binary upload to S3
      if: type != pull_request AND tag IS blank AND branch != master
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/post-compile/raw-bin_upload.sh debian9
    - <<: *post-compile
      name: Raw android binary upload to S3
      language: android
      android:
        components:
          - build-tools-25.0.2
      env: DUMMY=android
      if: type != pull_request AND tag IS blank AND branch != master
      script: $HOME/proof-bin/dev-tools/travis/proof-modules/post-compile/raw-bin_upload.sh android

    - &ping-dependants
      stage: Dependants builds
      name: Build request for all modules based on current one
      if: type != pull_request AND tag IS blank AND branch != master
      script: $HOME/proof-bin/dev-tools/travis/ping_dependants.sh
